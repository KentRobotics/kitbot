package org.usfirst.frc.team2785.misc;

import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;

public class Player {
    /**
     * Replays arrays of Doubles in HashMaps to asking parties
     */
    private Map<String, ArrayList<Double>> data;
    private Map<String, ArrayList<Long>> timeStamps;
    public Player() {
        
    }
    /**
     * Atomically read a Java serialization file generated by a Recorder into the player.
     * @param filePath the file path of the stored recording file.
     * @return if the operation succeeded
     */
    @SuppressWarnings("unchecked")
    public boolean read(String filePath) {
        try {
            FileInputStream fileIn = new FileInputStream(filePath);
            ObjectInputStream objIn = new ObjectInputStream(fileIn);
            // if these casts fail i swear to god
            data = (Map<String, ArrayList<Double>>) objIn.readObject();
            timeStamps = (Map<String, ArrayList<Long>>) objIn.readObject();
            fileIn.close();
            objIn.close();
            return true;
        } catch (Exception e) {
            // there are plenty of things that will can go wrong here.
            // panic and let the NullPointerExceptions fly about later in the other methods.
            e.printStackTrace(); //ouch!
            return false;
        }
    }
    public Iterator<Double> getIterator(String tableName) throws NullPointerException {
        return data.get(tableName).iterator();
    }
    public Iterator<Long> getTimeIterator(String tableName) throws NullPointerException {
        return timeStamps.get(tableName).iterator();
    }
    public TableReader getReader(String tableName) throws NullPointerException {
        return new TableReader(getIterator(tableName), getTimeIterator(tableName));
    }
}
